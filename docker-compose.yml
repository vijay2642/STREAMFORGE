version: '3.8'

services:
  # NGINX-RTMP Server with FFmpeg transcoding
  nginx-rtmp:
    build: 
      context: ./services/nginx-rtmp
      dockerfile: Dockerfile
    container_name: streamforge-nginx-rtmp
    ports:
      - "${RTMP_PORT:-1935}:1935"   # RTMP ingestion
      - "${HTTP_PORT:-8080}:8080"   # HTTP/HLS serving
    volumes:
      - hls_shared:/tmp/hls_shared
      - recordings:/tmp/recordings
      - logs:/var/log/streamforge
      - ./scripts:/scripts:ro
    environment:
      - NGINX_WORKER_PROCESSES=${NGINX_WORKER_PROCESSES:-auto}
      - TRANSCODER_URL=${TRANSCODER_URL:-http://transcoder:8083}
    networks:
      - streamforge
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/stat"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      transcoder:
        condition: service_healthy
    privileged: true

  # Go Transcoder Service
  transcoder:
    build:
      context: ./services/transcoder
      dockerfile: Dockerfile
    container_name: streamforge-transcoder
    ports:
      - "${TRANSCODER_PORT:-8083}:8083"   # Transcoder API
    volumes:
      - hls_shared:/tmp/hls_shared
      - logs:/app/logs
    environment:
      - PORT=8083
      - RTMP_URL=${RTMP_URL:-rtmp://nginx-rtmp:1935/live}
      - OUTPUT_DIR=/tmp/hls_shared
      - GIN_MODE=${GIN_MODE:-release}
    networks:
      - streamforge
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    privileged: true

  # Go HLS Server
  hls-server:
    build:
      context: ./services/hls-server
      dockerfile: Dockerfile
    container_name: streamforge-hls-server
    ports:
      - "${HLS_SERVER_PORT:-8085}:8085"   # HLS file serving
    volumes:
      - hls_shared:/tmp/hls_shared:ro
      - logs:/app/logs
    environment:
      - PORT=8085
      - HLS_DIR=/tmp/hls_shared
      - GIN_MODE=${GIN_MODE:-release}
    networks:
      - streamforge
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Go Admin API
  admin-api:
    build:
      context: ./services/admin-api
      dockerfile: Dockerfile
    container_name: streamforge-admin-api
    ports:
      - "${ADMIN_API_PORT:-9000}:9000"   # Admin API
    volumes:
      - hls_shared:/tmp/hls_shared:ro
      - recordings:/tmp/recordings:ro
      - logs:/app/logs
    environment:
      - PORT=9000
      - GIN_MODE=${GIN_MODE:-release}
    networks:
      - streamforge
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Web Interface
  web-interface:
    image: nginx:alpine
    container_name: streamforge-web
    ports:
      - "${WEB_PORT:-3000}:80"     # Web interface
    volumes:
      - ./web:/usr/share/nginx/html:ro
      - ./docker/nginx-web.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - streamforge
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    depends_on:
      - hls-server
      - admin-api

  # Stream Manager (Optional - for advanced stream management)
  stream-manager:
    build:
      context: ./services/stream-manager
      dockerfile: Dockerfile
    container_name: streamforge-stream-manager
    ports:
      - "${STREAM_MANAGER_PORT:-8081}:8081"   # Stream management API
    volumes:
      - hls_shared:/tmp/hls_shared
      - logs:/app/logs
    environment:
      - PORT=8081
      - TRANSCODER_URL=${TRANSCODER_URL:-http://transcoder:8083}
      - NGINX_URL=${NGINX_URL:-http://nginx-rtmp:8080}
      - GIN_MODE=${GIN_MODE:-release}
    networks:
      - streamforge
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    depends_on:
      transcoder:
        condition: service_healthy
      nginx-rtmp:
        condition: service_healthy

# Named volumes for persistent storage
volumes:
  hls_shared:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${HLS_DIR:-/tmp/streamforge/hls}
  recordings:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${RECORDINGS_DIR:-/tmp/streamforge/recordings}
  logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${LOGS_DIR:-./logs}

# Custom network for service communication
networks:
  streamforge:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
