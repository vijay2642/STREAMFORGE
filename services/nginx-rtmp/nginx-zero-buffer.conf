# Zero-Buffer NGINX Configuration for StreamForge
# Optimized for continuous playback with minimal buffering
# Implements strategies from LIVE_STREAM_NO_CDN_GUIDE.md

worker_processes 2;  # Match CPU cores
worker_rlimit_nofile 8192;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# RTMP server for zero-buffer streaming
rtmp {
    server {
        listen 1935;
        chunk_size 4096;
        
        # Optimize for ultra-low latency
        play_time_fix off;
        publish_time_fix off;
        
        application live {
            live on;
            
            # Allow publishing from anywhere (for development)
            allow publish all;
            allow play all;
            
            # Disable recording for better performance
            record off;
            
            # Execute zero-buffer transcoding script
            exec /usr/local/bin/transcode-zero-buffer.sh $name;
            
            # Timeout settings for better connection handling
            drop_idle_publisher 30s;
            sync 10ms;
            
            # Notify URLs for stream events (optional)
            # on_publish http://localhost:8083/api/stream/start;
            # on_publish_done http://localhost:8083/api/stream/stop;
        }
    }
}

# HTTP server for zero-buffer HLS delivery
http {
    # Basic optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 100;
    types_hash_max_size 2048;
    server_tokens off;
    
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # File access optimizations
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    
    # Logging (minimal for performance)
    access_log off;
    error_log /var/log/nginx/error.log warn;
    
    # Gzip compression for better delivery
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    # Rate limiting for abuse protection
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    
    server {
        listen 8080;
        server_name localhost;
        
        # Security headers
        add_header X-Frame-Options SAMEORIGIN always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        
        # RTMP statistics
        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
            add_header Refresh "3; $request_uri";
        }
        
        location /stat.xsl {
            root /usr/local/nginx/html;
        }
        
        # RTMP control interface
        location /control {
            rtmp_control all;
        }
        
        # Zero-Buffer HLS Delivery - Optimized for continuous playback
        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            alias /tmp/hls_shared/;
            
            # Enable range requests for better seeking
            add_header Accept-Ranges bytes always;
            
            # Manifest (.m3u8) optimization - Ultra-low caching
            location ~* \.m3u8$ {
                add_header Cache-Control "no-cache, no-store, must-revalidate" always;
                add_header Pragma "no-cache" always;
                add_header Expires "0" always;
                
                # CORS headers for cross-origin access
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
                
                # Optimized for live streaming
                expires -1;
                
                # Enable server push for HTTP/2 (if available)
                http2_push_preload on;
            }
            
            # Segment (.ts) optimization - Short-term caching
            location ~* \.ts$ {
                add_header Cache-Control "public, max-age=10" always;
                
                # CORS headers
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
                
                # Enable range requests
                add_header Accept-Ranges bytes always;
                
                # Optimize for streaming
                sendfile on;
                tcp_nopush on;
                tcp_nodelay on;
            }
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            # Directory browsing for debugging (disable in production)
            autoindex on;
            autoindex_exact_size off;
            autoindex_localtime on;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 "healthy\n";
        }
        
        # Zero-buffer player
        location /zero-buffer {
            alias /usr/local/nginx/html/zero-buffer/;
            index zero-buffer-player.html;
            
            # Optimize for static content
            expires 1h;
            add_header Cache-Control "public, immutable";
        }
        
        # API endpoints for stream management
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://localhost:8083/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts optimized for API responses
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Default location - serve static files
        location / {
            root /usr/local/nginx/html;
            index index.html index.htm;
            
            # Basic security for static files
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
            }
        }
    }
} 