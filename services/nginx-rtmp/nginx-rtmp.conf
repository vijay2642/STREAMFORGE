worker_processes auto;
rtmp_auto_push on;

events {}

# RTMP server for streaming
rtmp {
    server {
        listen 1935;
        chunk_size 4000;

        application live {
            live on;

            # Allow publishing from anywhere (for development)
            allow publish all;

            # Allow playing from anywhere
            allow play all;

            # Record all streams to separate files
            record all;
            record_path /tmp/recordings;
            record_suffix .flv;
            record_unique on;
            record_append on;

            # Authentication hook (optional - for production)
            # on_publish http://localhost:8080/auth;

            # Webhook notifications for stream events
            # on_publish http://localhost:8080/on_publish;
            # on_play http://localhost:8080/on_play;
            # on_publish_done http://localhost:8080/on_publish_done;
            # on_play_done http://localhost:8080/on_play_done;

            # Push to other RTMP servers (for CDN distribution)
            # push rtmp://cdn1.example.com/live;
            # push rtmp://cdn2.example.com/live;

            # HLS output for web players - multi-quality adaptive
            hls on;
            hls_path /tmp/hls_shared;
            hls_fragment 3;
            hls_playlist_length 60;
            hls_nested on;
            
            # Multi-quality HLS variants (cautious approach)
            hls_variant _720p BANDWIDTH=2000000 RESOLUTION=1280x720;
            hls_variant _480p BANDWIDTH=1200000 RESOLUTION=854x480;
            hls_variant _360p BANDWIDTH=800000 RESOLUTION=640x360;

            # DASH output (alternative to HLS)
            dash on;
            dash_path /tmp/dash;
        }

        # HLS processing application (internal use)
        application hls {
            live on;
            
            # Only allow localhost publishing (from exec ffmpeg)
            allow publish 127.0.0.1;
            deny publish all;
            
            # Generate HLS for each quality in separate directory
            hls on;
            hls_path /tmp/hls_internal;
            hls_fragment 3;
            hls_playlist_length 60;
            hls_nested on;
        }

        # Alternative application for different stream types
        application private {
            live on;

            # Restrict publishing (only localhost for testing)
            allow publish 127.0.0.1;
            deny publish all;

            # Allow playing from anywhere
            allow play all;
        }
    }
}

# HTTP server for stats and control
http {
    server {
        listen 8080;

        # RTMP statistics
        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
        }

        location /stat.xsl {
            root html;
        }

        # RTMP control interface
        location /control {
            rtmp_control all;
        }

        # HLS files serving
        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            alias /tmp/hls_shared/;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }

        # DASH files serving
        location /dash {
            root /tmp;
            add_header Cache-Control no-cache;
            add_header Access-Control-Allow-Origin *;
        }

        # API endpoints for stream management
        location /api/streams {
            # Future: REST API for stream management
            return 200 '{"status": "API coming soon"}';
            add_header Content-Type application/json;
        }
    }
}
