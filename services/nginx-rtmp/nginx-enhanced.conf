# Enhanced NGINX configuration for StreamForge
# Optimized for multiple concurrent streams with minimal buffering
# Note: RTMP module is compiled into nginx, no load_module needed

worker_processes auto;
worker_rlimit_nofile 65535;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

# RTMP server for streaming
rtmp {
    server {
        listen 1935;
        chunk_size 4096;
        
        # Optimize for low latency
        play_time_fix off;
        publish_time_fix off;
        
        application live {
            live on;

            # Allow publishing from anywhere (for development)
            allow publish all;

            # Allow playing from anywhere
            allow play all;

            # Disable recording for better performance
            record off;

            # Remove HTTP callbacks - use polling instead
            # Callbacks were causing issues, polling nginx stats works better

            # Disable built-in HLS - we use external FFmpeg transcoding for adaptive bitrate
            # hls on;
            # hls_path /tmp/hls;
            # hls_fragment 2s;
            # hls_playlist_length 20s;
            # hls_continuous on;
            # hls_cleanup on;
            # hls_fragment_naming system;
            # hls_fragment_slicing aligned;
            # hls_nested on;
            
            # Authentication hooks (optional)
            # on_publish http://localhost:8080/auth/publish;
            # on_play http://localhost:8080/auth/play;
            
            # Event notifications
            # on_publish http://localhost:8080/events/publish;
            # on_publish_done http://localhost:8080/events/publish_done;
            # on_play http://localhost:8080/events/play;
            # on_play_done http://localhost:8080/events/play_done;
        }
    }
}

# HTTP server for HLS delivery
http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;
    
    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Optimize file access
    open_file_cache max=1000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    
    # Logging
    access_log off;
    error_log /var/log/nginx/error.log warn;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    
    server {
        listen 8080;
        server_name localhost;
        
        # RTMP statistics
        location /stat {
            rtmp_stat all;
            rtmp_stat_stylesheet stat.xsl;
            add_header Refresh "3; $request_uri";
        }
        
        location /stat.xsl {
            root /usr/local/nginx/html;
        }
        
        # RTMP control interface
        location /control {
            rtmp_control all;
        }
        
        # HLS Delivery Location - serve adaptive streams from hls_shared
        location /hls {
            types {
                application/vnd.apple.mpegurl m3u8;
                video/mp2t ts;
            }
            alias /tmp/hls_shared/;

            # Optimized caching for HLS segments
            location ~* \.m3u8$ {
                add_header Cache-Control "no-cache, no-store, must-revalidate";
                add_header Pragma "no-cache";
                add_header Expires "0";
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;
            }

            location ~* \.ts$ {
                add_header Cache-Control "public, max-age=3600";
                add_header 'Access-Control-Allow-Origin' '*' always;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;
                add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

                # Enable range requests for better seeking
                add_header Accept-Ranges bytes;
            }

            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 "healthy\n";
        }
        
        # API endpoints for stream management (Go transcoder service)
        location /api/ {
            proxy_pass http://188.245.163.8:8083/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }
        
        # Admin API endpoints (Go admin service)
        location /api/admin/ {
            proxy_pass http://188.245.163.8:9000/api/admin/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
    }
}